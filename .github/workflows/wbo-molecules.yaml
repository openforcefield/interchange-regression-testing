name: WBO tests

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

defaults:
  run:
    shell: bash -l {0}


jobs:
  test:
    name: WBO tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.9"
          - "3.10"

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: interchange-regression-testing
        mamba-version: "*"
        channels: conda-forge,defaults
        channel-priority: true
        environment-file: environment-stable.yaml
        auto-activate-base: false

    - name: Install package
      run: |
        python setup.py develop --no-deps

    - name: Environment Information
      run: |
        conda info
        conda list

    - name: License OpenEye
      if: ${{ matrix.openeye == true }}
      run: |
        echo "${SECRET_OE_LICENSE}" > ${OE_LICENSE}
        python -c "from openeye import oechem; assert oechem.OEChemIsLicensed()"
      env:
        SECRET_OE_LICENSE: ${{ secrets.OE_LICENSE }}

    - name: Store toolkit version from stable environment
      run: |
        export TOOLKIT_VERSION=$(python -c "import openff.toolkit; print(openff.toolkit.__version__)")

    - name: Create default comparison settings, expected changes, and input topologies
      run: |
        cd openmm-system-parity
        python create-comparison-settings.py
        python create-expected-changes.py
        python create-wbo-molecule-inputs.py

    - name: Create systems using stable environment
      run: |
        cd openmm-system-parity
        pwd
        ls
        create_openmm_systems \
          --input "wbo-molecule/input-topologies.json" \
          --output "wbo-molecule" \
          --force-field "openff-2.0.0.offxml" \
          --force-field "force-fields/wbo.offxml" \
          --using-toolkit \
          --n-procs 1

    - name: Upgrade environment to bleeding edge
      run: |
        cd openmm-system-parity
        pwd
        ls
        mamba env update --file ../environment-latest.yaml

    - name: Store Interchange version from stable environment
      run: |
        cd openmm-system-parity
        pwd
        ls
        export INTERCHANGE_VERSION=$(python -c "import openff.interchange; print(openff.interchange.__version__)")

    - name: Create systems using latest environment
      run: |
        pwd
        ls
        create_openmm_systems \
          --input "wbo-molecule/input-topologies.json" \
          --output "wbo-molecule" \
          --force-field "openff-2.0.0.offxml" \
          --force-field "force-fields/wbo.offxml" \
          --using-interchange \
          --n-procs 1

    - name: Compare systems
      run: |
        cd openmm-system-parity
        pwd
        ls
        compare_openmm_systems \
          --input-dir-a "wbo-molecule/omm-systems-toolkit-$TOOLKIT_VERSION" \
          --input-dir-b "wbo-molecule/omm-systems-interchange-$INTERCHANGE_VERSION" \
          --output      "wbo-molecule-toolkit-$TOOLKIT_VERSION-vs-interchange-$INTERCHANGE_VERSION.json" \
          --settings    "comparison-settings/default-comparison-settings.json" \
          --expected-changes "expected-changes/toolkit-0-11-x-to-interchange-0-2-x.json" \
          --n-procs     2
